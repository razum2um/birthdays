# TODO use in upstream/server as nginx plus "resolve" to get non-cached hostname
# https://opm.openresty.org/package/jkeys089/lua-resty-resolver/
#
# resolver kube-dns.kube-system ipv6=off valid=10s;

upstream app-8080 {
  server 127.0.0.1:8080;
}

map $request_method $skip_cache {
    PUT     1;
    default 0;
}

map $request_method $cache_command {
    PUT     /memc-drop;
    default /memc-memoize;
}

### openresty
upstream memcached-shard-one {
    server memcached-0:11211;
}

upstream memcached-shard-two {
    server memcached-1:11211;
}

upstream_list memcached-shards memcached-shard-one memcached-shard-two;
### /openresty

server {
  listen       8000;
  server_name  localhost;
  root         /tmp/none;
  error_page   500 502 503 504 /50x.html;

  location = / {
    return 302 https://$host:8000/swagger-ui/;
  }

  location = /swagger.json {
    root /usr/share/nginx/html;
  }

  memc_connect_timeout 100ms;
    memc_send_timeout 100ms;
    memc_read_timeout 100ms;

    ### openresty
    location = /memc-memoize {
      internal;

      set $memc_key $arg_key;
      set_hashed_upstream $backend memcached-shards $memc_key;
      set $memc_exptime $arg_exptime; # in seconds
      memc_pass $backend;
    }
    location = /memc-drop {
      internal;

      set $memc_cmd delete;
      set $memc_key $arg_key;
      set_hashed_upstream $backend memcached-shards $memc_key;
      memc_pass $backend;
    }
    ### /openresty

  location /hello {
    # error_log /dev/stdout debug;

    ### openresty
    set_md5 $key $uri;
    srcache_max_expire 24h;
    set_by_lua_block $skip {
      if ngx.req.get_method() == "PUT" then
        return 1
      end
      if ngx.var.is_args == "?" then
        return 1
      end
      return 0
    }
    srcache_fetch_skip $skip;
    srcache_store_skip $arg_on;
    srcache_methods GET PUT;
    srcache_store_statuses 200 204;
    srcache_fetch GET /memc-memoize key=$key;
    srcache_store PUT $cache_command key=$key&exptime=$srcache_expire;
    more_set_headers 'X-Cache-Fetch-Status $srcache_fetch_status';
    more_set_headers 'X-Cache-Store-Status $srcache_store_status';
    ## /openresty

    proxy_set_header  Accept-Encoding  "";
    proxy_pass http://app-8080;
    include /etc/nginx/proxy.conf;
  }

  location / {
    root /usr/share/nginx/html;
    index index.html;
  }

  location /health {
    access_log off;
    return 200;
  }
}